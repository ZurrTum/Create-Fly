package com.zurrtum.create.client;

import net.minecraft.block.Block;
import net.minecraft.client.render.BlockRenderLayer;
import net.minecraft.client.render.RenderLayers;

import static com.zurrtum.create.AllBlocks.*;

public class AllBlockLayers {
    public static void register(Block block, BlockRenderLayer layer) {
        RenderLayers.BLOCKS.put(block, layer);
    }

    public static void register() {
        register(WATER_WHEEL, BlockRenderLayer.CUTOUT_MIPPED);
        register(BELT, BlockRenderLayer.CUTOUT_MIPPED);
        register(CLUTCH, BlockRenderLayer.CUTOUT_MIPPED);
        register(GEARSHIFT, BlockRenderLayer.CUTOUT_MIPPED);
        register(ANDESITE_ENCASED_COGWHEEL, BlockRenderLayer.CUTOUT_MIPPED);
        register(BRASS_ENCASED_COGWHEEL, BlockRenderLayer.CUTOUT_MIPPED);
        register(MECHANICAL_PISTON, BlockRenderLayer.CUTOUT_MIPPED);
        register(STICKY_MECHANICAL_PISTON, BlockRenderLayer.CUTOUT_MIPPED);
        register(GLASS_FLUID_PIPE, BlockRenderLayer.CUTOUT_MIPPED);
        register(BLAZE_BURNER, BlockRenderLayer.CUTOUT_MIPPED);
        register(LIT_BLAZE_BURNER, BlockRenderLayer.CUTOUT_MIPPED);
        register(FLUID_TANK, BlockRenderLayer.CUTOUT_MIPPED);
        register(CREATIVE_FLUID_TANK, BlockRenderLayer.CUTOUT_MIPPED);
        register(ROPE_PULLEY, BlockRenderLayer.CUTOUT_MIPPED);
        register(ENCASED_FAN, BlockRenderLayer.CUTOUT_MIPPED);
        register(PECULIAR_BELL, BlockRenderLayer.CUTOUT_MIPPED);
        register(HAUNTED_BELL, BlockRenderLayer.CUTOUT_MIPPED);
        register(INDUSTRIAL_IRON_WINDOW_PANE, BlockRenderLayer.CUTOUT_MIPPED);
        register(MECHANICAL_SAW, BlockRenderLayer.CUTOUT_MIPPED);
        register(BASIN, BlockRenderLayer.CUTOUT_MIPPED);
        register(ANDESITE_FUNNEL, BlockRenderLayer.CUTOUT_MIPPED);
        register(ANDESITE_BELT_FUNNEL, BlockRenderLayer.CUTOUT_MIPPED);
        register(BRASS_FUNNEL, BlockRenderLayer.CUTOUT_MIPPED);
        register(BRASS_BELT_FUNNEL, BlockRenderLayer.CUTOUT_MIPPED);
        register(ANDESITE_TUNNEL, BlockRenderLayer.CUTOUT_MIPPED);
        register(BRASS_TUNNEL, BlockRenderLayer.CUTOUT_MIPPED);
        register(CHUTE, BlockRenderLayer.CUTOUT_MIPPED);
        register(SMART_CHUTE, BlockRenderLayer.CUTOUT_MIPPED);
        register(CART_ASSEMBLER, BlockRenderLayer.CUTOUT_MIPPED);
        register(CONTROLLER_RAIL, BlockRenderLayer.CUTOUT_MIPPED);
        register(MECHANICAL_HARVESTER, BlockRenderLayer.CUTOUT_MIPPED);
        register(CUCKOO_CLOCK, BlockRenderLayer.CUTOUT_MIPPED);
        register(MYSTERIOUS_CUCKOO_CLOCK, BlockRenderLayer.CUTOUT_MIPPED);
        register(MECHANICAL_MIXER, BlockRenderLayer.CUTOUT_MIPPED);
        register(HOSE_PULLEY, BlockRenderLayer.CUTOUT_MIPPED);
        register(SPOUT, BlockRenderLayer.CUTOUT_MIPPED);
        register(ITEM_DRAIN, BlockRenderLayer.CUTOUT_MIPPED);
        register(COPPER_BACKTANK, BlockRenderLayer.CUTOUT_MIPPED);
        register(NETHERITE_BACKTANK, BlockRenderLayer.CUTOUT_MIPPED);
        register(CRUSHING_WHEEL, BlockRenderLayer.CUTOUT_MIPPED);
        register(DISPLAY_BOARD, BlockRenderLayer.CUTOUT_MIPPED);
        register(FLUID_VALVE, BlockRenderLayer.CUTOUT_MIPPED);
        register(REDSTONE_LINK, BlockRenderLayer.CUTOUT_MIPPED);
        register(PULSE_REPEATER, BlockRenderLayer.CUTOUT_MIPPED);
        register(PULSE_EXTENDER, BlockRenderLayer.CUTOUT_MIPPED);
        register(PULSE_TIMER, BlockRenderLayer.CUTOUT_MIPPED);
        register(POWERED_LATCH, BlockRenderLayer.CUTOUT_MIPPED);
        register(POWERED_TOGGLE_LATCH, BlockRenderLayer.CUTOUT_MIPPED);
        register(STICKER, BlockRenderLayer.CUTOUT_MIPPED);
        register(CONTRAPTION_CONTROLS, BlockRenderLayer.CUTOUT_MIPPED);
        register(ELEVATOR_PULLEY, BlockRenderLayer.CUTOUT_MIPPED);
        register(ANDESITE_DOOR, BlockRenderLayer.CUTOUT_MIPPED);
        register(BRASS_DOOR, BlockRenderLayer.CUTOUT_MIPPED);
        register(COPPER_DOOR, BlockRenderLayer.CUTOUT_MIPPED);
        register(TRAIN_DOOR, BlockRenderLayer.CUTOUT_MIPPED);
        register(FRAMED_GLASS_DOOR, BlockRenderLayer.CUTOUT_MIPPED);
        register(NOZZLE, BlockRenderLayer.CUTOUT_MIPPED);
        register(MECHANICAL_CRAFTER, BlockRenderLayer.CUTOUT_MIPPED);
        register(TRACK, BlockRenderLayer.CUTOUT_MIPPED);
        register(TRAIN_CONTROLS, BlockRenderLayer.CUTOUT_MIPPED);
        register(MECHANICAL_ROLLER, BlockRenderLayer.CUTOUT_MIPPED);
        register(PACKAGER, BlockRenderLayer.CUTOUT_MIPPED);
        register(REPACKAGER, BlockRenderLayer.CUTOUT_MIPPED);
        register(STOCK_TICKER, BlockRenderLayer.CUTOUT_MIPPED);
        register(WHITE_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(ORANGE_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(MAGENTA_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(LIGHT_BLUE_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(YELLOW_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(LIME_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(PINK_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(GRAY_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(LIGHT_GRAY_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(CYAN_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(PURPLE_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(BLUE_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(BROWN_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(GREEN_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(RED_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(BLACK_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(ANDESITE_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(BRASS_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(COPPER_TABLE_CLOTH, BlockRenderLayer.CUTOUT_MIPPED);
        register(PACKAGE_FROGPORT, BlockRenderLayer.CUTOUT_MIPPED);
        register(FACTORY_GAUGE, BlockRenderLayer.CUTOUT_MIPPED);
        register(ITEM_HATCH, BlockRenderLayer.CUTOUT_MIPPED);
        register(WHITE_TOOLBOX, BlockRenderLayer.CUTOUT_MIPPED);
        register(ORANGE_TOOLBOX, BlockRenderLayer.CUTOUT_MIPPED);
        register(MAGENTA_TOOLBOX, BlockRenderLayer.CUTOUT_MIPPED);
        register(LIGHT_BLUE_TOOLBOX, BlockRenderLayer.CUTOUT_MIPPED);
        register(YELLOW_TOOLBOX, BlockRenderLayer.CUTOUT_MIPPED);
        register(LIME_TOOLBOX, BlockRenderLayer.CUTOUT_MIPPED);
        register(PINK_TOOLBOX, BlockRenderLayer.CUTOUT_MIPPED);
        register(GRAY_TOOLBOX, BlockRenderLayer.CUTOUT_MIPPED);
        register(LIGHT_GRAY_TOOLBOX, BlockRenderLayer.CUTOUT_MIPPED);
        register(CYAN_TOOLBOX, BlockRenderLayer.CUTOUT_MIPPED);
        register(PURPLE_TOOLBOX, BlockRenderLayer.CUTOUT_MIPPED);
        register(BLUE_TOOLBOX, BlockRenderLayer.CUTOUT_MIPPED);
        register(BROWN_TOOLBOX, BlockRenderLayer.CUTOUT_MIPPED);
        register(GREEN_TOOLBOX, BlockRenderLayer.CUTOUT_MIPPED);
        register(RED_TOOLBOX, BlockRenderLayer.CUTOUT_MIPPED);
        register(BLACK_TOOLBOX, BlockRenderLayer.CUTOUT_MIPPED);
        register(ANDESITE_BARS, BlockRenderLayer.CUTOUT_MIPPED);
        register(BRASS_BARS, BlockRenderLayer.CUTOUT_MIPPED);
        register(COPPER_BARS, BlockRenderLayer.CUTOUT_MIPPED);
        register(FRAMED_GLASS_TRAPDOOR, BlockRenderLayer.CUTOUT_MIPPED);
        register(TILED_GLASS_PANE, BlockRenderLayer.CUTOUT_MIPPED);
        register(FRAMED_GLASS_PANE, BlockRenderLayer.CUTOUT_MIPPED);
        register(HORIZONTAL_FRAMED_GLASS_PANE, BlockRenderLayer.CUTOUT_MIPPED);
        register(VERTICAL_FRAMED_GLASS_PANE, BlockRenderLayer.CUTOUT_MIPPED);
        register(OAK_WINDOW, BlockRenderLayer.CUTOUT_MIPPED);
        register(SPRUCE_WINDOW, BlockRenderLayer.CUTOUT_MIPPED);
        register(JUNGLE_WINDOW, BlockRenderLayer.CUTOUT_MIPPED);
        register(ACACIA_WINDOW, BlockRenderLayer.CUTOUT_MIPPED);
        register(DARK_OAK_WINDOW, BlockRenderLayer.CUTOUT_MIPPED);
        register(MANGROVE_WINDOW, BlockRenderLayer.CUTOUT_MIPPED);
        register(CRIMSON_WINDOW, BlockRenderLayer.CUTOUT_MIPPED);
        register(WARPED_WINDOW, BlockRenderLayer.CUTOUT_MIPPED);
        register(CHERRY_WINDOW, BlockRenderLayer.CUTOUT_MIPPED);
        register(BAMBOO_WINDOW, BlockRenderLayer.CUTOUT_MIPPED);
        register(OAK_WINDOW_PANE, BlockRenderLayer.CUTOUT_MIPPED);
        register(SPRUCE_WINDOW_PANE, BlockRenderLayer.CUTOUT_MIPPED);
        register(JUNGLE_WINDOW_PANE, BlockRenderLayer.CUTOUT_MIPPED);
        register(ACACIA_WINDOW_PANE, BlockRenderLayer.CUTOUT_MIPPED);
        register(DARK_OAK_WINDOW_PANE, BlockRenderLayer.CUTOUT_MIPPED);
        register(MANGROVE_WINDOW_PANE, BlockRenderLayer.CUTOUT_MIPPED);
        register(CRIMSON_WINDOW_PANE, BlockRenderLayer.CUTOUT_MIPPED);
        register(WARPED_WINDOW_PANE, BlockRenderLayer.CUTOUT_MIPPED);
        register(CHERRY_WINDOW_PANE, BlockRenderLayer.CUTOUT_MIPPED);
        register(BAMBOO_WINDOW_PANE, BlockRenderLayer.CUTOUT_MIPPED);
        register(ORNATE_IRON_WINDOW_PANE, BlockRenderLayer.CUTOUT_MIPPED);
        register(COPYCAT_BASE, BlockRenderLayer.CUTOUT_MIPPED);
        register(COPYCAT_STEP, BlockRenderLayer.CUTOUT_MIPPED);
        register(COPYCAT_PANEL, BlockRenderLayer.CUTOUT_MIPPED);
        register(INDUSTRIAL_IRON_WINDOW, BlockRenderLayer.CUTOUT);
        register(ORNATE_IRON_WINDOW, BlockRenderLayer.CUTOUT);
        register(ANDESITE_LADDER, BlockRenderLayer.CUTOUT);
        register(BRASS_LADDER, BlockRenderLayer.CUTOUT);
        register(COPPER_LADDER, BlockRenderLayer.CUTOUT);
        register(ANDESITE_SCAFFOLD, BlockRenderLayer.CUTOUT);
        register(BRASS_SCAFFOLD, BlockRenderLayer.CUTOUT);
        register(COPPER_SCAFFOLD, BlockRenderLayer.CUTOUT);
        register(TILED_GLASS, BlockRenderLayer.CUTOUT);
        register(FRAMED_GLASS, BlockRenderLayer.CUTOUT);
        register(HORIZONTAL_FRAMED_GLASS, BlockRenderLayer.CUTOUT);
        register(VERTICAL_FRAMED_GLASS, BlockRenderLayer.CUTOUT);
        register(WEATHERED_IRON_WINDOW, BlockRenderLayer.TRANSLUCENT);
        register(WEATHERED_IRON_WINDOW_PANE, BlockRenderLayer.TRANSLUCENT);
        register(BIRCH_WINDOW, BlockRenderLayer.TRANSLUCENT);
        register(BIRCH_WINDOW_PANE, BlockRenderLayer.TRANSLUCENT);
    }
}